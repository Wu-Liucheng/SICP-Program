#lang racket
(define (make-point x y) (cons x y))
(define (x-point p) (car p))
(define (y-point p) (cdr p))
(define (make-segment start end) (cons start end))
(define (start-segment line) (car line))
(define (end-segment line) (cdr line))
(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))
(define (midpoint-segment line)
  (make-point (/ (+ (x-point (start-segment line)) (x-point (end-segment line))) 2)
              (/ (+ (y-point (start-segment line)) (y-point (end-segment line))) 2)))
(define l (make-segment (make-point 0 0) (make-point 4 4)))
(print-point (midpoint-segment l))
              